Bonus 1: Visual Simulation
Bonus 2: Random Board Generator


=== Visual Simulation: ===
We have implemented a visual simulation feature that prints the game state to the terminal using emojis.

Details:
- Added a `Drawer` class responsible for rendering the game state visually in the terminal.
- The `Drawer` supports multiple visual "skins" including:
  - Regular 🚙
  - Tennis  🎾
  - Aliens  👽
  - Pirate  ☠️
  - Middle East 🕌

- Introduced a `DrawableObject` base class (`GameObjects/GameObjects.h`, line 17) with a pure virtual method:
    string getDrawing(DrawingType t) const = 0;
  All drawable game objects inherit from this class and implement this method:
    - `Tank` class (`GameObjects/GameObjects.h`, line 160)
    - `Wall` class (`GameObjects/GameObjects.h`, line 123)
    - `Mine` class (`GameObjects/GameObjects.h`, line 106)
    - `Shell` class (`GameObjects/GameObjects.h`, line 197)

Usage:
- To enable the visual simulation, an additional numeric argument should be passed to the program indicating the desired skin:
  - 0 = Regular
  - 1 = Tennis
  - 2 = Aliens
  - 3 = Pirate
  - 4 = Middle East
- If no number is given, the game runs without visual simulation by default.

Relevant Files and Line References:
- `GameDrawer.h` and `DrawingTypes.h`: Implementation of the Drawer class, DrawingTypes enum.
- `main.cpp`: Logic to parse the additional command-line argument and enable the appropriate skin.


=== Random Board Generator ===
We wrote a script that generates random board creation input files for testing.

Details:
- Added a script 'generate_random_input_file.cpp' that accepts user input for board settings and generates a matching random input file in our format
- The script prints the requested input file and draws the board using emojis for the user to see

Usage:
- We created additional Makefile for compiling this script - simply run 'make' in the ScriptsAndHelpers folder and then run using './random_input_generator'
- The script will prompt some questions about the board that the user need to answer.

Relevant Files:
- `ScriptsAndHelpers/generate_random_input_file.cpp` and `ScriptsAndHelpers/Makefile`: Implementation of the generator and its Makefile.